version: '3.9'
services:
  elasticsearch:
    container_name: e01
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.name=data-engineer-demo
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    networks:
      - network01
    ports:
      - 9200:9200

  kibana:
    container_name: kb01
    image: docker.elastic.co/kibana/kibana:8.6.0
    environment:
      - ELASTICSEARCH_HOSTS = http://es01:9200
    networks:
      - network01
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  
  kafka:
    container_name: broker
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 1

  geoserver:
    container_name: wms
    image: kartoza/geoserver:latest
    ports:
      - 8080:8080
    volumes:
      - ./dataset:/opt/geoserver/data_dir
    environment:
      GEOSERVER_DATA_DIR: /opt/geoserver/data_dir
      GEOSERVER_ADMIN_USER: admin
      GEOSERVER_ADMIN_PASSWORD: geoserver
      
networks:
  network01:
    name: data-engineer-network
    driver: bridge
  